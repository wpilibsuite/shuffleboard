# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

resources:
  containers:
  - container: wpilib2020
    image: wpilib/roborio-cross-ubuntu:2020-18.04

variables:
- group: Artifactory-Package-Publish

stages:
- stage: Build
  jobs:
  - job: Linux
    pool:
      vmImage: 'Ubuntu 16.04'

    container: wpilib2020

    steps:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'check'
          options: '-PbuildServer'

  - job: Windows_64_Bit
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          jdkVersionOption: '1.11'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'check'
          options: '-PbuildServer'

  - job: Windows_32_Bit
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - powershell: |
          mkdir build
          $ProgressPreference = 'SilentlyContinue'
          wget "https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.4%2B11/OpenJDK11U-jdk_x86-32_windows_hotspot_11.0.4_11.zip" -O "build\jdk.zip"
        displayName: 'Download JDK'
      - task: JavaToolInstaller@0
        inputs:
          jdkSourceOption: localDirectory
          jdkFile: 'build/jdk.zip'
          jdkDestinationDirectory: 'build/jdkinst'
          jdkArchitectureOption: x86
      - task: Gradle@2
        inputs:
          options: '-x pmdMain -x pmdTest -PbuildServer'
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx1024m'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'check'

  - job: Mac
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - script: |
          mkdir build
          export JAVA_HOME=`/usr/libexec/java_home -v 11`
        displayName: 'Setup JDK'
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          jdkVersionOption: '1.11'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'check'
          options: '-PbuildServer'

- stage: Publish
  jobs:
  - job: PublishJob
    pool:
      vmImage: 'Ubuntu 16.04'

    container: wpilib2020

    steps:
# PR Builds
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        tasks: 'publish'
        options: '-PbuildServer'
      condition: and(succeeded(), and(ne(variables['Build.SourceBranch'], 'refs/heads/master'), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))))

# Master Builds
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        tasks: 'publish artifactoryPublish'
        options: '-PbuildServer'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      env:
        RUN_AZURE_ARTIFACTORY_RELEASE: 'TRUE'
        ARTIFACTORY_PUBLISH_USERNAME: $(PublishUserName)
        ARTIFACTORY_PUBLISH_PASSWORD: $(PublishPassword)

# Tagged Builds
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        tasks: 'publish artifactoryPublish'
        options: '-PreleaseMode -PbuildServer'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
      env:
        RUN_AZURE_ARTIFACTORY_RELEASE: 'TRUE'
        ARTIFACTORY_PUBLISH_USERNAME: $(PublishUserName)
        ARTIFACTORY_PUBLISH_PASSWORD: $(PublishPassword)
